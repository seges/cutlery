#!/bin/bash

function start
{
  IFACE="docker0"
  BRIDGE_IP=$(ifconfig | grep $IFACE -A1 | tail -n1 | awk '{print $2}' | cut -f2 -d':')
  if [ -z $BRIDGE_IP ]; then
    echo "$IFACE not active."
    exit 42
  fi

  CONSUL_RUNLIST=$@

  echo "[start] consul: $CONSUL_RUNLIST, dns @ $BRIDGE_IP"

  docker run -d \
    --name consul \
    -p 8300:8300 \
    -p 8301:8301 \
    -p 8301:8301/udp \
    -p 8302:8302 \
    -p 8302:8302/udp \
    -p 8400:8400 \
    -p 8500:8500 \
    -p $BRIDGE_IP:53:8600/udp \
    -h $HOSTNAME \
    -v /data \
    -t gliderlabs/consul-server:0.6 \
    -server -recursor "8.8.8.8" $CONSUL_RUNLIST

  echo "[start] registrator"
  docker run -d \
    --name registrator \
    -v /var/run/docker.sock:/tmp/docker.sock \
    -h $HOSTNAME \
    --link="consul:consul" \
    -t gliderlabs/registrator:v6 \
    -internal consul://consul:8500
}

function stop
{
  echo "[stop] registrator"
  read -t 1
  docker stop registrator
  echo "[stop] consul"
  read -t 1
  docker stop consul

  echo "[rm] registrator"
  read -t 1
  docker rm registrator
  echo "[rm] consul"
  read -t 1
  docker rm consul
}

function register
{
  IFACE="docker0"
  BRIDGE_IP=$(ifconfig | grep $IFACE -A1 | tail -n1 | awk '{print $2}' | cut -f2 -d':')

  which dnsmasq
  if [ $? -ne 0 ]; then
    if [ "OS_TYPE" == "DEB" ]; then
      sudo apt-get install dnsmasq
    elif [ "OS_TYPE" == "RH" ]; then
      sudo yum install dnsmasq
    elif [ "OS_TYPE" == "TCE" ]; then
      tce-load -wi dnsmasq
    else
      echo "Don't know how to install dnsmasq, try it manually"
      exit 42
    fi

    if [ -f /etc/dnsmasq.conf ]; then
      echo "interface=lo" >> /etc/dnsmasq.conf
      echo "except-interface=$IFACE" >> /etc/dnsmasq.conf
      echo "bind-interfaces" >> /etc/dnsmasq.conf

      service dnsmasq restart
    fi
  fi

  pgrep NetworkManager
  if [ "$?" -eq 0 ]; then
    sudo sh -c "echo 'server=/service.consul/$BRIDGE_IP' > /etc/NetworkManager/dnsmasq.d/cutlery-consul.conf"
    sudo restart network-manager
  else
    sudo sh -c "echo 'server=/service.consul/$BRIDGE_IP' > /etc/dnsmasq.d/cutlery-consul.conf"
    sudo service dnsmasq restart
  fi
}

function fw
{
  IFACE="docker0"
  BRIDGE_IP=$(ifconfig | grep $IFACE -A1 | tail -n1 | awk '{print $2}' | cut -f2 -d':')

  sudo ufw status|grep \ active
  if [ "$?" -eq 0 ]; then
    sudo ufw allow proto tcp from 172.17.0.0/16 to $BRIDGE_IP/32 port 8500
    sudo ufw allow proto udp from 172.17.0.0/16 to $BRIDGE_IP/32 port 53
  fi
}

if [ $# -lt 1 ]; then
  echo "Usage: $(basename $0) <start|stop|restart|register> [<consul parameters>]

       Controls Consul and Registrator containers.

       start|stop|restart - control the containers
       register - adds DNSmasq configuration to NetworkManager where all lookups to 'service.consul' domain are redirected to Consul container"
  exit 42
fi


COMMAND="$1"
shift

case $COMMAND in
start)
  start $@
  ;;
stop)
  stop
  ;;
restart)
  stop
  start $@
  ;;
register)
  register
  ;;
fw)
  fw
  ;;
esac	

